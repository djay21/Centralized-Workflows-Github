---
name: "Validate Terraform files"
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - '**/*.tf'
  workflow_call:
  
jobs:
  terraform:
    name: Validate Terraform files
    runs-on: ubuntu
    defaults:
      run:
        working-directory: examples
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        
      - name: Setup Nodejs
        uses: actions/setup-node@v1
        
      - name: Run `terraform fmt`
        id: fmt
        run: terraform fmt -diff -check -no-color -recursive
        
      - name: Run `terraform init`
        id: init
        run: terraform init
        
      - name: Run `terraform validate`
        id: validate
        if: github.event_name == 'pull_request'
        run: terraform validate -no-color
        
      - name: Run `terraform plan`
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -out=terraform-plan.json
        timeout-minutes: 10        
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1